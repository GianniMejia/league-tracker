<form id="tournament-form">
    <h1>Update a Tournament</h1>
    <div class="success"></div>
    <div class="errors"></div>
    <input type="hidden" value="{{tournament.id}}" name="id" />
    <label>
        Tournament Name
        <input type="text" name="name" value="{{tournament.name}}" />
    </label>
    <label>
        Description
        <textarea name="description">{{tournament.description}}</textarea>
    </label>
    <button>Save</button>
</form>

<section id="participant-section">
    <div class="errors"></div>
    <ul></ul>
    <form>
        <div class="success"></div>
        <div class="errors"></div>
        <label>
            New Participant
            <input type="text" name="name" />
        </label>

        <button>Add</button>
    </form>
</section>

<script type="module">
    import {
        updateTournament,
        getParticipants,
        addParticipant,
        deleteParticipant
    } from "/js/api/tournament.js";
    const tournamentId = {{ tournament.id }};

    document.querySelector("#tournament-form").onsubmit =
        (e) => updateTournament(
            e,
            e.currentTarget.querySelector(".success"),
            e.currentTarget.querySelector(".errors")
        );

    displayParticipants();
    async function displayParticipants() {
        const section = document.querySelector("#participant-section");
        const participants = await getParticipants(tournamentId, section.querySelector(".errors"));
        section.querySelector("ul").innerHTML = "";

        // Display the data
        section.querySelector("ul").append(
            ...participants
                .map(
                    (particpant) => {
                        const li = document.createElement("li");
                        li.innerHTML = particpant.name;

                        const button = document.createElement("button");
                        button.innerHTML = "X";
                        button.onclick = async () => {
                            await deleteParticipant(
                                tournamentId,
                                particpant.id,
                                section.querySelector(".errors")
                            );
                            displayParticipants();
                        }
                        li.append(button);
                        return li;
                    }
                )
        );
    }

    document.querySelector("#participant-section form").onsubmit =
        async (e) => {
            await addParticipant(
                e,
                tournamentId,
                e.currentTarget.querySelector(".errors")
            );

            displayParticipants();
        }


</script>